Terminals unused in grammar

   ENDOFILE
   ENDL
   ERROR
   TRIPLE_STRING_LITERAL


Grammar

    0 $accept: program $end

    1 program: classdecls

    2 classdecls: classdecls classdecl
    3           | classdecl

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE
    8          | CLASS error OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    9          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES error CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

   10 vfcontents: vfcontents COMMA vfcontent
   11           | vfcontent
   12           | %empty

   13 vfcontent: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER

   14 features: features feature
   15         | feature
   16         | error

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   18        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON
   19        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   20        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON
   21        | VAR OBJECT_IDENTIFIER ASSIGN NATIVE SEMICOLON
   22        | VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   23        | OPEN_ACCOLADE block CLOSE_ACCOLADE SEMICOLON

   24 formals: OPEN_PARENTHESES CLOSE_PARENTHESES
   25        | OPEN_PARENTHESES formalcontents CLOSE_PARENTHESES

   26 formalcontents: formalcontents COMMA formalcontent
   27               | formalcontent

   28 formalcontent: OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER

   29 actuals: OPEN_PARENTHESES CLOSE_PARENTHESES
   30        | OPEN_PARENTHESES actualscontent CLOSE_PARENTHESES

   31 actualscontent: actualscontent COMMA expression
   32               | expression

   33 block: blockexpressions

   34 blockexpressions: blockexpressions SEMICOLON blockexpression
   35                 | blockexpression

   36 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression
   37                | expression

   38 expression: OBJECT_IDENTIFIER ASSIGN expression
   39           | NOT expression
   40           | MINUS expression
   41           | IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE expression
   42           | WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES expression
   43           | SUPER DOT OBJECT_IDENTIFIER actuals
   44           | OBJECT_IDENTIFIER actuals
   45           | NEW TYPE_IDENTIFIER actuals
   46           | OPEN_ACCOLADE block CLOSE_ACCOLADE
   47           | OPEN_BRACKETS CLOSE_BRACKETS
   48           | OPEN_PARENTHESES expression CLOSE_PARENTHESES
   49           | expression DOT OBJECT_IDENTIFIER actuals
   50           | expression MATCH cases
   51           | expression LE expression
   52           | expression LT expression
   53           | expression EQ_OP expression
   54           | expression MULTIPLY expression
   55           | expression DIVIDE expression
   56           | expression PLUS expression
   57           | expression MINUS expression
   58           | NUL
   59           | OPEN_PARENTHESES CLOSE_PARENTHESES
   60           | OBJECT_IDENTIFIER
   61           | INTEGER_CONST
   62           | STRING_LITERAL
   63           | BOOLEAN_CONST
   64           | THIS
   65           | error

   66 cases: OPEN_ACCOLADE casecontents CLOSE_ACCOLADE

   67 casecontents: casecontents casecontent
   68             | casecontent

   69 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW block
   70            | CASE NUL DARROW block


Terminals, with rules where they appear

$end (0) 0
error (256) 8 9 16 65
ASSIGN (258) 17 18 19 20 21 22 36 38
CASE (259) 69 70
CLASS (260) 4 5 6 7 8 9
DARROW (261) 69 70
DEF (262) 17 18 19 20
ELSE (263) 41
EXTENDS (264) 6 7
EQ_OP (265) 53
IF (266) 41
NATIVE (267) 7 18 20 21
NEW (268) 45
NUL (269) 58 70
OVERRIDE (270) 17 18
SUPER (271) 43
THIS (272) 64
VAR (273) 13 21 22 36
WHILE (274) 42
SEMICOLON (275) 17 18 19 20 21 22 23 34
COLON (276) 13 17 18 19 20 22 28 36 69
COMMA (277) 10 26 31
OPEN_ACCOLADE (278) 4 5 6 7 8 9 23 46 66
CLOSE_ACCOLADE (279) 4 5 6 7 8 9 23 46 66
OPEN_PARENTHESES (280) 4 5 6 7 8 9 24 25 29 30 41 42 48 59
CLOSE_PARENTHESES (281) 4 5 6 7 8 9 24 25 29 30 41 42 48 59
OPEN_BRACKETS (282) 47
CLOSE_BRACKETS (283) 47
ENDOFILE (284)
IFWHILE (285)
MATCH (286) 50
LE (287) 51
LT (288) 52
PLUS (289) 56
MINUS (290) 40 57
MULTIPLY (291) 54
DIVIDE (292) 55
NOT (293) 39
UMINUS (294)
DOT (295) 43 49
ENDL (296)
ERROR (297)
BOOLEAN_CONST (298) 63
INTEGER_CONST (299) 61
STRING_LITERAL (300) 62
TRIPLE_STRING_LITERAL (301)
OBJECT_IDENTIFIER (302) 13 17 18 19 20 21 22 28 36 38 43 44 49 60 69
TYPE_IDENTIFIER (303) 4 5 6 7 9 13 17 18 19 20 22 28 36 45 69


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
classdecls (51)
    on left: 2 3, on right: 1 2
classdecl (52)
    on left: 4 5 6 7 8 9, on right: 2 3
vfcontents (53)
    on left: 10 11 12, on right: 4 5 6 7 8 10
vfcontent (54)
    on left: 13, on right: 10 11
features (55)
    on left: 14 15 16, on right: 5 6 7 8 9 14
feature (56)
    on left: 17 18 19 20 21 22 23, on right: 14 15
formals (57)
    on left: 24 25, on right: 17 18 19 20
formalcontents (58)
    on left: 26 27, on right: 25 26
formalcontent (59)
    on left: 28, on right: 26 27
actuals (60)
    on left: 29 30, on right: 6 43 44 45 49
actualscontent (61)
    on left: 31 32, on right: 30 31
block (62)
    on left: 33, on right: 23 46 69 70
blockexpressions (63)
    on left: 34 35, on right: 33 34
blockexpression (64)
    on left: 36 37, on right: 34 35
expression (65)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58 59 60 61 62 63 64 65, on right: 17 19 22 31 32 36 37 38
    39 40 41 42 48 49 50 51 52 53 54 55 56 57
cases (66)
    on left: 66, on right: 50
casecontents (67)
    on left: 67 68, on right: 66 67
casecontent (68)
    on left: 69 70, on right: 67 68


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    classdecls  go to state 3
    classdecl   go to state 4


State 1

    4 classdecl: CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE
    8          | CLASS . error OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    9          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES error CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

    error            shift, and go to state 5
    TYPE_IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: classdecls .
    2 classdecls: classdecls . classdecl

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    classdecl  go to state 8


State 4

    3 classdecls: classdecl .

    $default  reduce using rule 3 (classdecls)


State 5

    8 classdecl: CLASS error . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_PARENTHESES  shift, and go to state 9


State 6

    4 classdecl: CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE
    9          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES error CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_PARENTHESES  shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    2 classdecls: classdecls classdecl .

    $default  reduce using rule 2 (classdecls)


State 9

    8 classdecl: CLASS error OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

    VAR  shift, and go to state 11

    $default  reduce using rule 12 (vfcontents)

    vfcontents  go to state 12
    vfcontent   go to state 13


State 10

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE
    9          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . error CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

    error  shift, and go to state 14
    VAR    shift, and go to state 11

    COMMA              reduce using rule 12 (vfcontents)
    CLOSE_PARENTHESES  reduce using rule 12 (vfcontents)

    vfcontents  go to state 15
    vfcontent   go to state 13


State 11

   13 vfcontent: VAR . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER

    OBJECT_IDENTIFIER  shift, and go to state 16


State 12

    8 classdecl: CLASS error OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
   10 vfcontents: vfcontents . COMMA vfcontent

    COMMA              shift, and go to state 17
    CLOSE_PARENTHESES  shift, and go to state 18


State 13

   11 vfcontents: vfcontent .

    $default  reduce using rule 11 (vfcontents)


State 14

    9 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES error . CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE

    CLOSE_PARENTHESES  shift, and go to state 19


State 15

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE
   10 vfcontents: vfcontents . COMMA vfcontent

    COMMA              shift, and go to state 17
    CLOSE_PARENTHESES  shift, and go to state 20


State 16

   13 vfcontent: VAR OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER

    COLON  shift, and go to state 21


State 17

   10 vfcontents: vfcontents COMMA . vfcontent

    VAR  shift, and go to state 11

    vfcontent  go to state 22


State 18

    8 classdecl: CLASS error OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_ACCOLADE  shift, and go to state 23


State 19

    9 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES error CLOSE_PARENTHESES . OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_ACCOLADE  shift, and go to state 24


State 20

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    EXTENDS        shift, and go to state 25
    OPEN_ACCOLADE  shift, and go to state 26


State 21

   13 vfcontent: VAR OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER

    TYPE_IDENTIFIER  shift, and go to state 27


State 22

   10 vfcontents: vfcontents COMMA vfcontent .

    $default  reduce using rule 10 (vfcontents)


State 23

    8 classdecl: CLASS error OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE . features CLOSE_ACCOLADE

    error          shift, and go to state 28
    DEF            shift, and go to state 29
    OVERRIDE       shift, and go to state 30
    VAR            shift, and go to state 31
    OPEN_ACCOLADE  shift, and go to state 32

    features  go to state 33
    feature   go to state 34


State 24

    9 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES error CLOSE_PARENTHESES OPEN_ACCOLADE . features CLOSE_ACCOLADE

    error          shift, and go to state 28
    DEF            shift, and go to state 29
    OVERRIDE       shift, and go to state 30
    VAR            shift, and go to state 31
    OPEN_ACCOLADE  shift, and go to state 32

    features  go to state 35
    feature   go to state 34


State 25

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS . TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS . NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    NATIVE           shift, and go to state 36
    TYPE_IDENTIFIER  shift, and go to state 37


State 26

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE . CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE . features CLOSE_ACCOLADE

    error           shift, and go to state 28
    DEF             shift, and go to state 29
    OVERRIDE        shift, and go to state 30
    VAR             shift, and go to state 31
    OPEN_ACCOLADE   shift, and go to state 32
    CLOSE_ACCOLADE  shift, and go to state 38

    features  go to state 39
    feature   go to state 34


State 27

   13 vfcontent: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER .

    $default  reduce using rule 13 (vfcontent)


State 28

   16 features: error .

    $default  reduce using rule 16 (features)


State 29

   19 feature: DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   20        | DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OBJECT_IDENTIFIER  shift, and go to state 40


State 30

   17 feature: OVERRIDE . DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   18        | OVERRIDE . DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    DEF  shift, and go to state 41


State 31

   21 feature: VAR . OBJECT_IDENTIFIER ASSIGN NATIVE SEMICOLON
   22        | VAR . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON

    OBJECT_IDENTIFIER  shift, and go to state 42


State 32

   23 feature: OPEN_ACCOLADE . block CLOSE_ACCOLADE SEMICOLON

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    VAR                shift, and go to state 49
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    block             go to state 60
    blockexpressions  go to state 61
    blockexpression   go to state 62
    expression        go to state 63


State 33

    8 classdecl: CLASS error OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features . CLOSE_ACCOLADE
   14 features: features . feature

    DEF             shift, and go to state 29
    OVERRIDE        shift, and go to state 30
    VAR             shift, and go to state 31
    OPEN_ACCOLADE   shift, and go to state 32
    CLOSE_ACCOLADE  shift, and go to state 64

    feature  go to state 65


State 34

   15 features: feature .

    $default  reduce using rule 15 (features)


State 35

    9 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES error CLOSE_PARENTHESES OPEN_ACCOLADE features . CLOSE_ACCOLADE
   14 features: features . feature

    DEF             shift, and go to state 29
    OVERRIDE        shift, and go to state 30
    VAR             shift, and go to state 31
    OPEN_ACCOLADE   shift, and go to state 32
    CLOSE_ACCOLADE  shift, and go to state 66

    feature  go to state 65


State 36

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE . OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_ACCOLADE  shift, and go to state 67


State 37

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER . actuals OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_PARENTHESES  shift, and go to state 68

    actuals  go to state 69


State 38

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE .

    $default  reduce using rule 4 (classdecl)


State 39

    5 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features . CLOSE_ACCOLADE
   14 features: features . feature

    DEF             shift, and go to state 29
    OVERRIDE        shift, and go to state 30
    VAR             shift, and go to state 31
    OPEN_ACCOLADE   shift, and go to state 32
    CLOSE_ACCOLADE  shift, and go to state 70

    feature  go to state 65


State 40

   19 feature: DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   20        | DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OPEN_PARENTHESES  shift, and go to state 71

    formals  go to state 72


State 41

   17 feature: OVERRIDE DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   18        | OVERRIDE DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OBJECT_IDENTIFIER  shift, and go to state 73


State 42

   21 feature: VAR OBJECT_IDENTIFIER . ASSIGN NATIVE SEMICOLON
   22        | VAR OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 74
    COLON   shift, and go to state 75


State 43

   65 expression: error .

    $default  reduce using rule 65 (expression)


State 44

   41 expression: IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE expression

    OPEN_PARENTHESES  shift, and go to state 76


State 45

   45 expression: NEW . TYPE_IDENTIFIER actuals

    TYPE_IDENTIFIER  shift, and go to state 77


State 46

   58 expression: NUL .

    $default  reduce using rule 58 (expression)


State 47

   43 expression: SUPER . DOT OBJECT_IDENTIFIER actuals

    DOT  shift, and go to state 78


State 48

   64 expression: THIS .

    $default  reduce using rule 64 (expression)


State 49

   36 blockexpression: VAR . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression

    OBJECT_IDENTIFIER  shift, and go to state 79


State 50

   42 expression: WHILE . OPEN_PARENTHESES expression CLOSE_PARENTHESES expression

    OPEN_PARENTHESES  shift, and go to state 80


State 51

   46 expression: OPEN_ACCOLADE . block CLOSE_ACCOLADE

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    VAR                shift, and go to state 49
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    block             go to state 81
    blockexpressions  go to state 61
    blockexpression   go to state 62
    expression        go to state 63


State 52

   48 expression: OPEN_PARENTHESES . expression CLOSE_PARENTHESES
   59           | OPEN_PARENTHESES . CLOSE_PARENTHESES

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    CLOSE_PARENTHESES  shift, and go to state 82
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 83


State 53

   47 expression: OPEN_BRACKETS . CLOSE_BRACKETS

    CLOSE_BRACKETS  shift, and go to state 84


State 54

   40 expression: MINUS . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 85


State 55

   39 expression: NOT . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 86


State 56

   63 expression: BOOLEAN_CONST .

    $default  reduce using rule 63 (expression)


State 57

   61 expression: INTEGER_CONST .

    $default  reduce using rule 61 (expression)


State 58

   62 expression: STRING_LITERAL .

    $default  reduce using rule 62 (expression)


State 59

   38 expression: OBJECT_IDENTIFIER . ASSIGN expression
   44           | OBJECT_IDENTIFIER . actuals
   60           | OBJECT_IDENTIFIER .

    ASSIGN            shift, and go to state 87
    OPEN_PARENTHESES  shift, and go to state 68

    $default  reduce using rule 60 (expression)

    actuals  go to state 88


State 60

   23 feature: OPEN_ACCOLADE block . CLOSE_ACCOLADE SEMICOLON

    CLOSE_ACCOLADE  shift, and go to state 89


State 61

   33 block: blockexpressions .
   34 blockexpressions: blockexpressions . SEMICOLON blockexpression

    SEMICOLON  shift, and go to state 90

    $default  reduce using rule 33 (block)


State 62

   35 blockexpressions: blockexpression .

    $default  reduce using rule 35 (blockexpressions)


State 63

   37 blockexpression: expression .
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 37 (blockexpression)


State 64

    8 classdecl: CLASS error OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 8 (classdecl)


State 65

   14 features: features feature .

    $default  reduce using rule 14 (features)


State 66

    9 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES error CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 9 (classdecl)


State 67

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE . features CLOSE_ACCOLADE

    error          shift, and go to state 28
    DEF            shift, and go to state 29
    OVERRIDE       shift, and go to state 30
    VAR            shift, and go to state 31
    OPEN_ACCOLADE  shift, and go to state 32

    features  go to state 100
    feature   go to state 34


State 68

   29 actuals: OPEN_PARENTHESES . CLOSE_PARENTHESES
   30        | OPEN_PARENTHESES . actualscontent CLOSE_PARENTHESES

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    CLOSE_PARENTHESES  shift, and go to state 101
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    actualscontent  go to state 102
    expression      go to state 103


State 69

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals . OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_ACCOLADE  shift, and go to state 104


State 70

    5 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 5 (classdecl)


State 71

   24 formals: OPEN_PARENTHESES . CLOSE_PARENTHESES
   25        | OPEN_PARENTHESES . formalcontents CLOSE_PARENTHESES

    CLOSE_PARENTHESES  shift, and go to state 105
    OBJECT_IDENTIFIER  shift, and go to state 106

    formalcontents  go to state 107
    formalcontent   go to state 108


State 72

   19 feature: DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   20        | DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    COLON  shift, and go to state 109


State 73

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   18        | OVERRIDE DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OPEN_PARENTHESES  shift, and go to state 71

    formals  go to state 110


State 74

   21 feature: VAR OBJECT_IDENTIFIER ASSIGN . NATIVE SEMICOLON

    NATIVE  shift, and go to state 111


State 75

   22 feature: VAR OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER ASSIGN expression SEMICOLON

    TYPE_IDENTIFIER  shift, and go to state 112


State 76

   41 expression: IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES expression ELSE expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 113


State 77

   45 expression: NEW TYPE_IDENTIFIER . actuals

    OPEN_PARENTHESES  shift, and go to state 68

    actuals  go to state 114


State 78

   43 expression: SUPER DOT . OBJECT_IDENTIFIER actuals

    OBJECT_IDENTIFIER  shift, and go to state 115


State 79

   36 blockexpression: VAR OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER ASSIGN expression

    COLON  shift, and go to state 116


State 80

   42 expression: WHILE OPEN_PARENTHESES . expression CLOSE_PARENTHESES expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 117


State 81

   46 expression: OPEN_ACCOLADE block . CLOSE_ACCOLADE

    CLOSE_ACCOLADE  shift, and go to state 118


State 82

   59 expression: OPEN_PARENTHESES CLOSE_PARENTHESES .

    $default  reduce using rule 59 (expression)


State 83

   48 expression: OPEN_PARENTHESES expression . CLOSE_PARENTHESES
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP              shift, and go to state 91
    CLOSE_PARENTHESES  shift, and go to state 119
    MATCH              shift, and go to state 92
    LE                 shift, and go to state 93
    LT                 shift, and go to state 94
    PLUS               shift, and go to state 95
    MINUS              shift, and go to state 96
    MULTIPLY           shift, and go to state 97
    DIVIDE             shift, and go to state 98
    DOT                shift, and go to state 99


State 84

   47 expression: OPEN_BRACKETS CLOSE_BRACKETS .

    $default  reduce using rule 47 (expression)


State 85

   40 expression: MINUS expression .
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    DOT  shift, and go to state 99

    $default  reduce using rule 40 (expression)


State 86

   39 expression: NOT expression .
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    DOT  shift, and go to state 99

    $default  reduce using rule 39 (expression)


State 87

   38 expression: OBJECT_IDENTIFIER ASSIGN . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 120


State 88

   44 expression: OBJECT_IDENTIFIER actuals .

    $default  reduce using rule 44 (expression)


State 89

   23 feature: OPEN_ACCOLADE block CLOSE_ACCOLADE . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 90

   34 blockexpressions: blockexpressions SEMICOLON . blockexpression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    VAR                shift, and go to state 49
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    blockexpression  go to state 122
    expression       go to state 63


State 91

   53 expression: expression EQ_OP . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 123


State 92

   50 expression: expression MATCH . cases

    OPEN_ACCOLADE  shift, and go to state 124

    cases  go to state 125


State 93

   51 expression: expression LE . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 126


State 94

   52 expression: expression LT . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 127


State 95

   56 expression: expression PLUS . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 128


State 96

   57 expression: expression MINUS . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 129


State 97

   54 expression: expression MULTIPLY . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 130


State 98

   55 expression: expression DIVIDE . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 131


State 99

   49 expression: expression DOT . OBJECT_IDENTIFIER actuals

    OBJECT_IDENTIFIER  shift, and go to state 132


State 100

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features . CLOSE_ACCOLADE
   14 features: features . feature

    DEF             shift, and go to state 29
    OVERRIDE        shift, and go to state 30
    VAR             shift, and go to state 31
    OPEN_ACCOLADE   shift, and go to state 32
    CLOSE_ACCOLADE  shift, and go to state 133

    feature  go to state 65


State 101

   29 actuals: OPEN_PARENTHESES CLOSE_PARENTHESES .

    $default  reduce using rule 29 (actuals)


State 102

   30 actuals: OPEN_PARENTHESES actualscontent . CLOSE_PARENTHESES
   31 actualscontent: actualscontent . COMMA expression

    COMMA              shift, and go to state 134
    CLOSE_PARENTHESES  shift, and go to state 135


State 103

   32 actualscontent: expression .
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 32 (actualscontent)


State 104

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE . features CLOSE_ACCOLADE

    error          shift, and go to state 28
    DEF            shift, and go to state 29
    OVERRIDE       shift, and go to state 30
    VAR            shift, and go to state 31
    OPEN_ACCOLADE  shift, and go to state 32

    features  go to state 136
    feature   go to state 34


State 105

   24 formals: OPEN_PARENTHESES CLOSE_PARENTHESES .

    $default  reduce using rule 24 (formals)


State 106

   28 formalcontent: OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER

    COLON  shift, and go to state 137


State 107

   25 formals: OPEN_PARENTHESES formalcontents . CLOSE_PARENTHESES
   26 formalcontents: formalcontents . COMMA formalcontent

    COMMA              shift, and go to state 138
    CLOSE_PARENTHESES  shift, and go to state 139


State 108

   27 formalcontents: formalcontent .

    $default  reduce using rule 27 (formalcontents)


State 109

   19 feature: DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   20        | DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    TYPE_IDENTIFIER  shift, and go to state 140


State 110

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   18        | OVERRIDE DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    COLON  shift, and go to state 141


State 111

   21 feature: VAR OBJECT_IDENTIFIER ASSIGN NATIVE . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 112

   22 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 143


State 113

   41 expression: IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES expression ELSE expression
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP              shift, and go to state 91
    CLOSE_PARENTHESES  shift, and go to state 144
    MATCH              shift, and go to state 92
    LE                 shift, and go to state 93
    LT                 shift, and go to state 94
    PLUS               shift, and go to state 95
    MINUS              shift, and go to state 96
    MULTIPLY           shift, and go to state 97
    DIVIDE             shift, and go to state 98
    DOT                shift, and go to state 99


State 114

   45 expression: NEW TYPE_IDENTIFIER actuals .

    $default  reduce using rule 45 (expression)


State 115

   43 expression: SUPER DOT OBJECT_IDENTIFIER . actuals

    OPEN_PARENTHESES  shift, and go to state 68

    actuals  go to state 145


State 116

   36 blockexpression: VAR OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER ASSIGN expression

    TYPE_IDENTIFIER  shift, and go to state 146


State 117

   42 expression: WHILE OPEN_PARENTHESES expression . CLOSE_PARENTHESES expression
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP              shift, and go to state 91
    CLOSE_PARENTHESES  shift, and go to state 147
    MATCH              shift, and go to state 92
    LE                 shift, and go to state 93
    LT                 shift, and go to state 94
    PLUS               shift, and go to state 95
    MINUS              shift, and go to state 96
    MULTIPLY           shift, and go to state 97
    DIVIDE             shift, and go to state 98
    DOT                shift, and go to state 99


State 118

   46 expression: OPEN_ACCOLADE block CLOSE_ACCOLADE .

    $default  reduce using rule 46 (expression)


State 119

   48 expression: OPEN_PARENTHESES expression CLOSE_PARENTHESES .

    $default  reduce using rule 48 (expression)


State 120

   38 expression: OBJECT_IDENTIFIER ASSIGN expression .
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 38 (expression)


State 121

   23 feature: OPEN_ACCOLADE block CLOSE_ACCOLADE SEMICOLON .

    $default  reduce using rule 23 (feature)


State 122

   34 blockexpressions: blockexpressions SEMICOLON blockexpression .

    $default  reduce using rule 34 (blockexpressions)


State 123

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   53           | expression EQ_OP expression .
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 53 (expression)


State 124

   66 cases: OPEN_ACCOLADE . casecontents CLOSE_ACCOLADE

    CASE  shift, and go to state 148

    casecontents  go to state 149
    casecontent   go to state 150


State 125

   50 expression: expression MATCH cases .

    $default  reduce using rule 50 (expression)


State 126

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   51           | expression LE expression .
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 51 (expression)


State 127

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   52           | expression LT expression .
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 52 (expression)


State 128

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   56           | expression PLUS expression .
   57           | expression . MINUS expression

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 56 (expression)


State 129

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression
   57           | expression MINUS expression .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 57 (expression)


State 130

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   54           | expression MULTIPLY expression .
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    DOT  shift, and go to state 99

    $default  reduce using rule 54 (expression)


State 131

   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   55           | expression DIVIDE expression .
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    DOT  shift, and go to state 99

    $default  reduce using rule 55 (expression)


State 132

   49 expression: expression DOT OBJECT_IDENTIFIER . actuals

    OPEN_PARENTHESES  shift, and go to state 68

    actuals  go to state 151


State 133

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 7 (classdecl)


State 134

   31 actualscontent: actualscontent COMMA . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 152


State 135

   30 actuals: OPEN_PARENTHESES actualscontent CLOSE_PARENTHESES .

    $default  reduce using rule 30 (actuals)


State 136

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features . CLOSE_ACCOLADE
   14 features: features . feature

    DEF             shift, and go to state 29
    OVERRIDE        shift, and go to state 30
    VAR             shift, and go to state 31
    OPEN_ACCOLADE   shift, and go to state 32
    CLOSE_ACCOLADE  shift, and go to state 153

    feature  go to state 65


State 137

   28 formalcontent: OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER

    TYPE_IDENTIFIER  shift, and go to state 154


State 138

   26 formalcontents: formalcontents COMMA . formalcontent

    OBJECT_IDENTIFIER  shift, and go to state 106

    formalcontent  go to state 155


State 139

   25 formals: OPEN_PARENTHESES formalcontents CLOSE_PARENTHESES .

    $default  reduce using rule 25 (formals)


State 140

   19 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN expression SEMICOLON
   20        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN NATIVE SEMICOLON

    ASSIGN  shift, and go to state 156


State 141

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   18        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    TYPE_IDENTIFIER  shift, and go to state 157


State 142

   21 feature: VAR OBJECT_IDENTIFIER ASSIGN NATIVE SEMICOLON .

    $default  reduce using rule 21 (feature)


State 143

   22 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN . expression SEMICOLON

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 158


State 144

   41 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . expression ELSE expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 159


State 145

   43 expression: SUPER DOT OBJECT_IDENTIFIER actuals .

    $default  reduce using rule 43 (expression)


State 146

   36 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 160


State 147

   42 expression: WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 161


State 148

   69 casecontent: CASE . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW block
   70            | CASE . NUL DARROW block

    NUL                shift, and go to state 162
    OBJECT_IDENTIFIER  shift, and go to state 163


State 149

   66 cases: OPEN_ACCOLADE casecontents . CLOSE_ACCOLADE
   67 casecontents: casecontents . casecontent

    CASE            shift, and go to state 148
    CLOSE_ACCOLADE  shift, and go to state 164

    casecontent  go to state 165


State 150

   68 casecontents: casecontent .

    $default  reduce using rule 68 (casecontents)


State 151

   49 expression: expression DOT OBJECT_IDENTIFIER actuals .

    $default  reduce using rule 49 (expression)


State 152

   31 actualscontent: actualscontent COMMA expression .
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 31 (actualscontent)


State 153

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 6 (classdecl)


State 154

   28 formalcontent: OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER .

    $default  reduce using rule 28 (formalcontent)


State 155

   26 formalcontents: formalcontents COMMA formalcontent .

    $default  reduce using rule 26 (formalcontents)


State 156

   19 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . expression SEMICOLON
   20        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . NATIVE SEMICOLON

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NATIVE             shift, and go to state 166
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 167


State 157

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN expression SEMICOLON
   18        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN NATIVE SEMICOLON

    ASSIGN  shift, and go to state 168


State 158

   22 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression . SEMICOLON
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP      shift, and go to state 91
    SEMICOLON  shift, and go to state 169
    MATCH      shift, and go to state 92
    LE         shift, and go to state 93
    LT         shift, and go to state 94
    PLUS       shift, and go to state 95
    MINUS      shift, and go to state 96
    MULTIPLY   shift, and go to state 97
    DIVIDE     shift, and go to state 98
    DOT        shift, and go to state 99


State 159

   41 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression . ELSE expression
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    ELSE      shift, and go to state 170
    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99


State 160

   36 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 171


State 161

   42 expression: WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES expression .
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 42 (expression)


State 162

   70 casecontent: CASE NUL . DARROW block

    DARROW  shift, and go to state 172


State 163

   69 casecontent: CASE OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER DARROW block

    COLON  shift, and go to state 173


State 164

   66 cases: OPEN_ACCOLADE casecontents CLOSE_ACCOLADE .

    $default  reduce using rule 66 (cases)


State 165

   67 casecontents: casecontents casecontent .

    $default  reduce using rule 67 (casecontents)


State 166

   20 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE . SEMICOLON

    SEMICOLON  shift, and go to state 174


State 167

   19 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression . SEMICOLON
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP      shift, and go to state 91
    SEMICOLON  shift, and go to state 175
    MATCH      shift, and go to state 92
    LE         shift, and go to state 93
    LT         shift, and go to state 94
    PLUS       shift, and go to state 95
    MINUS      shift, and go to state 96
    MULTIPLY   shift, and go to state 97
    DIVIDE     shift, and go to state 98
    DOT        shift, and go to state 99


State 168

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . expression SEMICOLON
   18        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . NATIVE SEMICOLON

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NATIVE             shift, and go to state 176
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 177


State 169

   22 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 22 (feature)


State 170

   41 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE . expression

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    expression  go to state 178


State 171

   36 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression .
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 36 (blockexpression)


State 172

   70 casecontent: CASE NUL DARROW . block

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    VAR                shift, and go to state 49
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    block             go to state 179
    blockexpressions  go to state 61
    blockexpression   go to state 62
    expression        go to state 63


State 173

   69 casecontent: CASE OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER DARROW block

    TYPE_IDENTIFIER  shift, and go to state 180


State 174

   20 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON .

    $default  reduce using rule 20 (feature)


State 175

   19 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 19 (feature)


State 176

   18 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE . SEMICOLON

    SEMICOLON  shift, and go to state 181


State 177

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression . SEMICOLON
   49 expression: expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP      shift, and go to state 91
    SEMICOLON  shift, and go to state 182
    MATCH      shift, and go to state 92
    LE         shift, and go to state 93
    LT         shift, and go to state 94
    PLUS       shift, and go to state 95
    MINUS      shift, and go to state 96
    MULTIPLY   shift, and go to state 97
    DIVIDE     shift, and go to state 98
    DOT        shift, and go to state 99


State 178

   41 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE expression .
   49           | expression . DOT OBJECT_IDENTIFIER actuals
   50           | expression . MATCH cases
   51           | expression . LE expression
   52           | expression . LT expression
   53           | expression . EQ_OP expression
   54           | expression . MULTIPLY expression
   55           | expression . DIVIDE expression
   56           | expression . PLUS expression
   57           | expression . MINUS expression

    EQ_OP     shift, and go to state 91
    MATCH     shift, and go to state 92
    LE        shift, and go to state 93
    LT        shift, and go to state 94
    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98
    DOT       shift, and go to state 99

    $default  reduce using rule 41 (expression)


State 179

   70 casecontent: CASE NUL DARROW block .

    $default  reduce using rule 70 (casecontent)


State 180

   69 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER . DARROW block

    DARROW  shift, and go to state 183


State 181

   18 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON .

    $default  reduce using rule 18 (feature)


State 182

   17 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 17 (feature)


State 183

   69 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW . block

    error              shift, and go to state 43
    IF                 shift, and go to state 44
    NEW                shift, and go to state 45
    NUL                shift, and go to state 46
    SUPER              shift, and go to state 47
    THIS               shift, and go to state 48
    VAR                shift, and go to state 49
    WHILE              shift, and go to state 50
    OPEN_ACCOLADE      shift, and go to state 51
    OPEN_PARENTHESES   shift, and go to state 52
    OPEN_BRACKETS      shift, and go to state 53
    MINUS              shift, and go to state 54
    NOT                shift, and go to state 55
    BOOLEAN_CONST      shift, and go to state 56
    INTEGER_CONST      shift, and go to state 57
    STRING_LITERAL     shift, and go to state 58
    OBJECT_IDENTIFIER  shift, and go to state 59

    block             go to state 184
    blockexpressions  go to state 61
    blockexpression   go to state 62
    expression        go to state 63


State 184

   69 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW block .

    $default  reduce using rule 69 (casecontent)
