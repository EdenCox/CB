Terminals unused in grammar

   ENDOFILE
   ENDL
   ERROR
   TRIPLE_STRING_LITERAL


Grammar

    0 $accept: program $end

    1 program: classdecls

    2 classdecls: classdecls classdecl
    3           | classdecl

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    8 vfcontents: vfcontents COMMA vfcontent
    9           | vfcontent
   10           | %empty

   11 vfcontent: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER

   12 features: features feature
   13         | feature

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   15        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON
   16        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   17        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON
   18        | VAR OBJECT_IDENTIFIER ASSIGN NATIVE SEMICOLON
   19        | VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   20        | OPEN_ACCOLADE block CLOSE_ACCOLADE SEMICOLON

   21 formals: OPEN_PARENTHESES CLOSE_PARENTHESES
   22        | OPEN_PARENTHESES formalcontents CLOSE_PARENTHESES

   23 formalcontents: formalcontents COMMA formalcontent
   24               | formalcontent

   25 formalcontent: OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER

   26 actuals: OPEN_PARENTHESES CLOSE_PARENTHESES
   27        | OPEN_PARENTHESES actualscontent CLOSE_PARENTHESES

   28 actualscontent: actualscontent COMMA expression
   29               | expression

   30 block: blockexpressions

   31 blockexpressions: blockexpressions SEMICOLON blockexpression
   32                 | blockexpression

   33 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression
   34                | expression

   35 expression: OBJECT_IDENTIFIER ASSIGN expression
   36           | NOT expression
   37           | MINUS expression
   38           | IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE expression
   39           | WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES expression
   40           | SUPER DOT OBJECT_IDENTIFIER actuals
   41           | OBJECT_IDENTIFIER actuals
   42           | NEW TYPE_IDENTIFIER actuals
   43           | OPEN_ACCOLADE block CLOSE_ACCOLADE
   44           | OPEN_BRACKETS CLOSE_BRACKETS
   45           | OPEN_PARENTHESES expression CLOSE_PARENTHESES
   46           | expression DOT OBJECT_IDENTIFIER actuals
   47           | expression MATCH cases
   48           | expression LE expression
   49           | expression LT expression
   50           | expression EQ_OP expression
   51           | expression MULTIPLY expression
   52           | expression DIVIDE expression
   53           | expression PLUS expression
   54           | expression MINUS expression
   55           | NUL
   56           | OPEN_PARENTHESES CLOSE_PARENTHESES
   57           | OBJECT_IDENTIFIER
   58           | INTEGER_CONST
   59           | STRING_LITERAL
   60           | BOOLEAN_CONST
   61           | THIS

   62 cases: OPEN_ACCOLADE casecontents CLOSE_ACCOLADE

   63 casecontents: casecontents casecontent
   64             | casecontent

   65 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW block
   66            | CASE NUL DARROW block


Terminals, with rules where they appear

$end (0) 0
error (256)
ASSIGN (258) 14 15 16 17 18 19 33 35
CASE (259) 65 66
CLASS (260) 4 5 6 7
DARROW (261) 65 66
DEF (262) 14 15 16 17
ELSE (263) 38
EXTENDS (264) 6 7
EQ_OP (265) 50
IF (266) 38
NATIVE (267) 7 15 17 18
NEW (268) 42
NUL (269) 55 66
OVERRIDE (270) 14 15
SUPER (271) 40
THIS (272) 61
VAR (273) 11 18 19 33
WHILE (274) 39
SEMICOLON (275) 14 15 16 17 18 19 20 31
COLON (276) 11 14 15 16 17 19 25 33 65
COMMA (277) 8 23 28
OPEN_ACCOLADE (278) 4 5 6 7 20 43 62
CLOSE_ACCOLADE (279) 4 5 6 7 20 43 62
OPEN_PARENTHESES (280) 4 5 6 7 21 22 26 27 38 39 45 56
CLOSE_PARENTHESES (281) 4 5 6 7 21 22 26 27 38 39 45 56
OPEN_BRACKETS (282) 44
CLOSE_BRACKETS (283) 44
ENDOFILE (284)
IFWHILE (285)
MATCH (286) 47
LE (287) 48
LT (288) 49
PLUS (289) 53
MINUS (290) 37 54
MULTIPLY (291) 51
DIVIDE (292) 52
NOT (293) 36
UMINUS (294)
DOT (295) 40 46
ENDL (296)
ERROR (297)
BOOLEAN_CONST (298) 60
INTEGER_CONST (299) 58
STRING_LITERAL (300) 59
TRIPLE_STRING_LITERAL (301)
OBJECT_IDENTIFIER (302) 11 14 15 16 17 18 19 25 33 35 40 41 46 57 65
TYPE_IDENTIFIER (303) 4 5 6 7 11 14 15 16 17 19 25 33 42 65


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
classdecls (51)
    on left: 2 3, on right: 1 2
classdecl (52)
    on left: 4 5 6 7, on right: 2 3
vfcontents (53)
    on left: 8 9 10, on right: 4 5 6 7 8
vfcontent (54)
    on left: 11, on right: 8 9
features (55)
    on left: 12 13, on right: 5 6 7 12
feature (56)
    on left: 14 15 16 17 18 19 20, on right: 12 13
formals (57)
    on left: 21 22, on right: 14 15 16 17
formalcontents (58)
    on left: 23 24, on right: 22 23
formalcontent (59)
    on left: 25, on right: 23 24
actuals (60)
    on left: 26 27, on right: 6 40 41 42 46
actualscontent (61)
    on left: 28 29, on right: 27 28
block (62)
    on left: 30, on right: 20 43 65 66
blockexpressions (63)
    on left: 31 32, on right: 30 31
blockexpression (64)
    on left: 33 34, on right: 31 32
expression (65)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 58 59 60 61, on right: 14 16 19 28 29 33 34 35 36
    37 38 39 45 46 47 48 49 50 51 52 53 54
cases (66)
    on left: 62, on right: 47
casecontents (67)
    on left: 63 64, on right: 62 63
casecontent (68)
    on left: 65 66, on right: 63 64


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    classdecls  go to state 3
    classdecl   go to state 4


State 1

    4 classdecl: CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS . TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    TYPE_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: classdecls .
    2 classdecls: classdecls . classdecl

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    classdecl  go to state 7


State 4

    3 classdecls: classdecl .

    $default  reduce using rule 3 (classdecls)


State 5

    4 classdecl: CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER . OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_PARENTHESES  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 classdecls: classdecls classdecl .

    $default  reduce using rule 2 (classdecls)


State 8

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES . vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    VAR  shift, and go to state 9

    $default  reduce using rule 10 (vfcontents)

    vfcontents  go to state 10
    vfcontent   go to state 11


State 9

   11 vfcontent: VAR . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER

    OBJECT_IDENTIFIER  shift, and go to state 12


State 10

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents . CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE
    8 vfcontents: vfcontents . COMMA vfcontent

    COMMA              shift, and go to state 13
    CLOSE_PARENTHESES  shift, and go to state 14


State 11

    9 vfcontents: vfcontent .

    $default  reduce using rule 9 (vfcontents)


State 12

   11 vfcontent: VAR OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER

    COLON  shift, and go to state 15


State 13

    8 vfcontents: vfcontents COMMA . vfcontent

    VAR  shift, and go to state 9

    vfcontent  go to state 16


State 14

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . OPEN_ACCOLADE CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . OPEN_ACCOLADE features CLOSE_ACCOLADE
    6          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES . EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    EXTENDS        shift, and go to state 17
    OPEN_ACCOLADE  shift, and go to state 18


State 15

   11 vfcontent: VAR OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER

    TYPE_IDENTIFIER  shift, and go to state 19


State 16

    8 vfcontents: vfcontents COMMA vfcontent .

    $default  reduce using rule 8 (vfcontents)


State 17

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS . TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE
    7          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS . NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE

    NATIVE           shift, and go to state 20
    TYPE_IDENTIFIER  shift, and go to state 21


State 18

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE . CLOSE_ACCOLADE
    5          | CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE . features CLOSE_ACCOLADE

    DEF             shift, and go to state 22
    OVERRIDE        shift, and go to state 23
    VAR             shift, and go to state 24
    OPEN_ACCOLADE   shift, and go to state 25
    CLOSE_ACCOLADE  shift, and go to state 26

    features  go to state 27
    feature   go to state 28


State 19

   11 vfcontent: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER .

    $default  reduce using rule 11 (vfcontent)


State 20

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE . OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_ACCOLADE  shift, and go to state 29


State 21

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER . actuals OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_PARENTHESES  shift, and go to state 30

    actuals  go to state 31


State 22

   16 feature: DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   17        | DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OBJECT_IDENTIFIER  shift, and go to state 32


State 23

   14 feature: OVERRIDE . DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   15        | OVERRIDE . DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    DEF  shift, and go to state 33


State 24

   18 feature: VAR . OBJECT_IDENTIFIER ASSIGN NATIVE SEMICOLON
   19        | VAR . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON

    OBJECT_IDENTIFIER  shift, and go to state 34


State 25

   20 feature: OPEN_ACCOLADE . block CLOSE_ACCOLADE SEMICOLON

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    VAR                shift, and go to state 40
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    block             go to state 51
    blockexpressions  go to state 52
    blockexpression   go to state 53
    expression        go to state 54


State 26

    4 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE CLOSE_ACCOLADE .

    $default  reduce using rule 4 (classdecl)


State 27

    5 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features . CLOSE_ACCOLADE
   12 features: features . feature

    DEF             shift, and go to state 22
    OVERRIDE        shift, and go to state 23
    VAR             shift, and go to state 24
    OPEN_ACCOLADE   shift, and go to state 25
    CLOSE_ACCOLADE  shift, and go to state 55

    feature  go to state 56


State 28

   13 features: feature .

    $default  reduce using rule 13 (features)


State 29

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE . features CLOSE_ACCOLADE

    DEF            shift, and go to state 22
    OVERRIDE       shift, and go to state 23
    VAR            shift, and go to state 24
    OPEN_ACCOLADE  shift, and go to state 25

    features  go to state 57
    feature   go to state 28


State 30

   26 actuals: OPEN_PARENTHESES . CLOSE_PARENTHESES
   27        | OPEN_PARENTHESES . actualscontent CLOSE_PARENTHESES

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    CLOSE_PARENTHESES  shift, and go to state 58
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    actualscontent  go to state 59
    expression      go to state 60


State 31

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals . OPEN_ACCOLADE features CLOSE_ACCOLADE

    OPEN_ACCOLADE  shift, and go to state 61


State 32

   16 feature: DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   17        | DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OPEN_PARENTHESES  shift, and go to state 62

    formals  go to state 63


State 33

   14 feature: OVERRIDE DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   15        | OVERRIDE DEF . OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OBJECT_IDENTIFIER  shift, and go to state 64


State 34

   18 feature: VAR OBJECT_IDENTIFIER . ASSIGN NATIVE SEMICOLON
   19        | VAR OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 65
    COLON   shift, and go to state 66


State 35

   38 expression: IF . OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE expression

    OPEN_PARENTHESES  shift, and go to state 67


State 36

   42 expression: NEW . TYPE_IDENTIFIER actuals

    TYPE_IDENTIFIER  shift, and go to state 68


State 37

   55 expression: NUL .

    $default  reduce using rule 55 (expression)


State 38

   40 expression: SUPER . DOT OBJECT_IDENTIFIER actuals

    DOT  shift, and go to state 69


State 39

   61 expression: THIS .

    $default  reduce using rule 61 (expression)


State 40

   33 blockexpression: VAR . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression

    OBJECT_IDENTIFIER  shift, and go to state 70


State 41

   39 expression: WHILE . OPEN_PARENTHESES expression CLOSE_PARENTHESES expression

    OPEN_PARENTHESES  shift, and go to state 71


State 42

   43 expression: OPEN_ACCOLADE . block CLOSE_ACCOLADE

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    VAR                shift, and go to state 40
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    block             go to state 72
    blockexpressions  go to state 52
    blockexpression   go to state 53
    expression        go to state 54


State 43

   45 expression: OPEN_PARENTHESES . expression CLOSE_PARENTHESES
   56           | OPEN_PARENTHESES . CLOSE_PARENTHESES

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    CLOSE_PARENTHESES  shift, and go to state 73
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 74


State 44

   44 expression: OPEN_BRACKETS . CLOSE_BRACKETS

    CLOSE_BRACKETS  shift, and go to state 75


State 45

   37 expression: MINUS . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 76


State 46

   36 expression: NOT . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 77


State 47

   60 expression: BOOLEAN_CONST .

    $default  reduce using rule 60 (expression)


State 48

   58 expression: INTEGER_CONST .

    $default  reduce using rule 58 (expression)


State 49

   59 expression: STRING_LITERAL .

    $default  reduce using rule 59 (expression)


State 50

   35 expression: OBJECT_IDENTIFIER . ASSIGN expression
   41           | OBJECT_IDENTIFIER . actuals
   57           | OBJECT_IDENTIFIER .

    ASSIGN            shift, and go to state 78
    OPEN_PARENTHESES  shift, and go to state 30

    $default  reduce using rule 57 (expression)

    actuals  go to state 79


State 51

   20 feature: OPEN_ACCOLADE block . CLOSE_ACCOLADE SEMICOLON

    CLOSE_ACCOLADE  shift, and go to state 80


State 52

   30 block: blockexpressions .
   31 blockexpressions: blockexpressions . SEMICOLON blockexpression

    SEMICOLON  shift, and go to state 81

    $default  reduce using rule 30 (block)


State 53

   32 blockexpressions: blockexpression .

    $default  reduce using rule 32 (blockexpressions)


State 54

   34 blockexpression: expression .
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 34 (blockexpression)


State 55

    5 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 5 (classdecl)


State 56

   12 features: features feature .

    $default  reduce using rule 12 (features)


State 57

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features . CLOSE_ACCOLADE
   12 features: features . feature

    DEF             shift, and go to state 22
    OVERRIDE        shift, and go to state 23
    VAR             shift, and go to state 24
    OPEN_ACCOLADE   shift, and go to state 25
    CLOSE_ACCOLADE  shift, and go to state 91

    feature  go to state 56


State 58

   26 actuals: OPEN_PARENTHESES CLOSE_PARENTHESES .

    $default  reduce using rule 26 (actuals)


State 59

   27 actuals: OPEN_PARENTHESES actualscontent . CLOSE_PARENTHESES
   28 actualscontent: actualscontent . COMMA expression

    COMMA              shift, and go to state 92
    CLOSE_PARENTHESES  shift, and go to state 93


State 60

   29 actualscontent: expression .
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 29 (actualscontent)


State 61

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE . features CLOSE_ACCOLADE

    DEF            shift, and go to state 22
    OVERRIDE       shift, and go to state 23
    VAR            shift, and go to state 24
    OPEN_ACCOLADE  shift, and go to state 25

    features  go to state 94
    feature   go to state 28


State 62

   21 formals: OPEN_PARENTHESES . CLOSE_PARENTHESES
   22        | OPEN_PARENTHESES . formalcontents CLOSE_PARENTHESES

    CLOSE_PARENTHESES  shift, and go to state 95
    OBJECT_IDENTIFIER  shift, and go to state 96

    formalcontents  go to state 97
    formalcontent   go to state 98


State 63

   16 feature: DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   17        | DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    COLON  shift, and go to state 99


State 64

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   15        | OVERRIDE DEF OBJECT_IDENTIFIER . formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    OPEN_PARENTHESES  shift, and go to state 62

    formals  go to state 100


State 65

   18 feature: VAR OBJECT_IDENTIFIER ASSIGN . NATIVE SEMICOLON

    NATIVE  shift, and go to state 101


State 66

   19 feature: VAR OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER ASSIGN expression SEMICOLON

    TYPE_IDENTIFIER  shift, and go to state 102


State 67

   38 expression: IF OPEN_PARENTHESES . expression CLOSE_PARENTHESES expression ELSE expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 103


State 68

   42 expression: NEW TYPE_IDENTIFIER . actuals

    OPEN_PARENTHESES  shift, and go to state 30

    actuals  go to state 104


State 69

   40 expression: SUPER DOT . OBJECT_IDENTIFIER actuals

    OBJECT_IDENTIFIER  shift, and go to state 105


State 70

   33 blockexpression: VAR OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER ASSIGN expression

    COLON  shift, and go to state 106


State 71

   39 expression: WHILE OPEN_PARENTHESES . expression CLOSE_PARENTHESES expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 107


State 72

   43 expression: OPEN_ACCOLADE block . CLOSE_ACCOLADE

    CLOSE_ACCOLADE  shift, and go to state 108


State 73

   56 expression: OPEN_PARENTHESES CLOSE_PARENTHESES .

    $default  reduce using rule 56 (expression)


State 74

   45 expression: OPEN_PARENTHESES expression . CLOSE_PARENTHESES
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP              shift, and go to state 82
    CLOSE_PARENTHESES  shift, and go to state 109
    MATCH              shift, and go to state 83
    LE                 shift, and go to state 84
    LT                 shift, and go to state 85
    PLUS               shift, and go to state 86
    MINUS              shift, and go to state 87
    MULTIPLY           shift, and go to state 88
    DIVIDE             shift, and go to state 89
    DOT                shift, and go to state 90


State 75

   44 expression: OPEN_BRACKETS CLOSE_BRACKETS .

    $default  reduce using rule 44 (expression)


State 76

   37 expression: MINUS expression .
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    DOT  shift, and go to state 90

    $default  reduce using rule 37 (expression)


State 77

   36 expression: NOT expression .
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    DOT  shift, and go to state 90

    $default  reduce using rule 36 (expression)


State 78

   35 expression: OBJECT_IDENTIFIER ASSIGN . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 110


State 79

   41 expression: OBJECT_IDENTIFIER actuals .

    $default  reduce using rule 41 (expression)


State 80

   20 feature: OPEN_ACCOLADE block CLOSE_ACCOLADE . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 81

   31 blockexpressions: blockexpressions SEMICOLON . blockexpression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    VAR                shift, and go to state 40
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    blockexpression  go to state 112
    expression       go to state 54


State 82

   50 expression: expression EQ_OP . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 113


State 83

   47 expression: expression MATCH . cases

    OPEN_ACCOLADE  shift, and go to state 114

    cases  go to state 115


State 84

   48 expression: expression LE . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 116


State 85

   49 expression: expression LT . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 117


State 86

   53 expression: expression PLUS . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 118


State 87

   54 expression: expression MINUS . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 119


State 88

   51 expression: expression MULTIPLY . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 120


State 89

   52 expression: expression DIVIDE . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 121


State 90

   46 expression: expression DOT . OBJECT_IDENTIFIER actuals

    OBJECT_IDENTIFIER  shift, and go to state 122


State 91

    7 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS NATIVE OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 7 (classdecl)


State 92

   28 actualscontent: actualscontent COMMA . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 123


State 93

   27 actuals: OPEN_PARENTHESES actualscontent CLOSE_PARENTHESES .

    $default  reduce using rule 27 (actuals)


State 94

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features . CLOSE_ACCOLADE
   12 features: features . feature

    DEF             shift, and go to state 22
    OVERRIDE        shift, and go to state 23
    VAR             shift, and go to state 24
    OPEN_ACCOLADE   shift, and go to state 25
    CLOSE_ACCOLADE  shift, and go to state 124

    feature  go to state 56


State 95

   21 formals: OPEN_PARENTHESES CLOSE_PARENTHESES .

    $default  reduce using rule 21 (formals)


State 96

   25 formalcontent: OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER

    COLON  shift, and go to state 125


State 97

   22 formals: OPEN_PARENTHESES formalcontents . CLOSE_PARENTHESES
   23 formalcontents: formalcontents . COMMA formalcontent

    COMMA              shift, and go to state 126
    CLOSE_PARENTHESES  shift, and go to state 127


State 98

   24 formalcontents: formalcontent .

    $default  reduce using rule 24 (formalcontents)


State 99

   16 feature: DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   17        | DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    TYPE_IDENTIFIER  shift, and go to state 128


State 100

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   15        | OVERRIDE DEF OBJECT_IDENTIFIER formals . COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    COLON  shift, and go to state 129


State 101

   18 feature: VAR OBJECT_IDENTIFIER ASSIGN NATIVE . SEMICOLON

    SEMICOLON  shift, and go to state 130


State 102

   19 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 131


State 103

   38 expression: IF OPEN_PARENTHESES expression . CLOSE_PARENTHESES expression ELSE expression
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP              shift, and go to state 82
    CLOSE_PARENTHESES  shift, and go to state 132
    MATCH              shift, and go to state 83
    LE                 shift, and go to state 84
    LT                 shift, and go to state 85
    PLUS               shift, and go to state 86
    MINUS              shift, and go to state 87
    MULTIPLY           shift, and go to state 88
    DIVIDE             shift, and go to state 89
    DOT                shift, and go to state 90


State 104

   42 expression: NEW TYPE_IDENTIFIER actuals .

    $default  reduce using rule 42 (expression)


State 105

   40 expression: SUPER DOT OBJECT_IDENTIFIER . actuals

    OPEN_PARENTHESES  shift, and go to state 30

    actuals  go to state 133


State 106

   33 blockexpression: VAR OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER ASSIGN expression

    TYPE_IDENTIFIER  shift, and go to state 134


State 107

   39 expression: WHILE OPEN_PARENTHESES expression . CLOSE_PARENTHESES expression
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP              shift, and go to state 82
    CLOSE_PARENTHESES  shift, and go to state 135
    MATCH              shift, and go to state 83
    LE                 shift, and go to state 84
    LT                 shift, and go to state 85
    PLUS               shift, and go to state 86
    MINUS              shift, and go to state 87
    MULTIPLY           shift, and go to state 88
    DIVIDE             shift, and go to state 89
    DOT                shift, and go to state 90


State 108

   43 expression: OPEN_ACCOLADE block CLOSE_ACCOLADE .

    $default  reduce using rule 43 (expression)


State 109

   45 expression: OPEN_PARENTHESES expression CLOSE_PARENTHESES .

    $default  reduce using rule 45 (expression)


State 110

   35 expression: OBJECT_IDENTIFIER ASSIGN expression .
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 35 (expression)


State 111

   20 feature: OPEN_ACCOLADE block CLOSE_ACCOLADE SEMICOLON .

    $default  reduce using rule 20 (feature)


State 112

   31 blockexpressions: blockexpressions SEMICOLON blockexpression .

    $default  reduce using rule 31 (blockexpressions)


State 113

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   50           | expression EQ_OP expression .
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 50 (expression)


State 114

   62 cases: OPEN_ACCOLADE . casecontents CLOSE_ACCOLADE

    CASE  shift, and go to state 136

    casecontents  go to state 137
    casecontent   go to state 138


State 115

   47 expression: expression MATCH cases .

    $default  reduce using rule 47 (expression)


State 116

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   48           | expression LE expression .
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 48 (expression)


State 117

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   49           | expression LT expression .
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 49 (expression)


State 118

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   53           | expression PLUS expression .
   54           | expression . MINUS expression

    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 53 (expression)


State 119

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression
   54           | expression MINUS expression .

    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 54 (expression)


State 120

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   51           | expression MULTIPLY expression .
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    DOT  shift, and go to state 90

    $default  reduce using rule 51 (expression)


State 121

   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   52           | expression DIVIDE expression .
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    DOT  shift, and go to state 90

    $default  reduce using rule 52 (expression)


State 122

   46 expression: expression DOT OBJECT_IDENTIFIER . actuals

    OPEN_PARENTHESES  shift, and go to state 30

    actuals  go to state 139


State 123

   28 actualscontent: actualscontent COMMA expression .
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 28 (actualscontent)


State 124

    6 classdecl: CLASS TYPE_IDENTIFIER OPEN_PARENTHESES vfcontents CLOSE_PARENTHESES EXTENDS TYPE_IDENTIFIER actuals OPEN_ACCOLADE features CLOSE_ACCOLADE .

    $default  reduce using rule 6 (classdecl)


State 125

   25 formalcontent: OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER

    TYPE_IDENTIFIER  shift, and go to state 140


State 126

   23 formalcontents: formalcontents COMMA . formalcontent

    OBJECT_IDENTIFIER  shift, and go to state 96

    formalcontent  go to state 141


State 127

   22 formals: OPEN_PARENTHESES formalcontents CLOSE_PARENTHESES .

    $default  reduce using rule 22 (formals)


State 128

   16 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN expression SEMICOLON
   17        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN NATIVE SEMICOLON

    ASSIGN  shift, and go to state 142


State 129

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN expression SEMICOLON
   15        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON . TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON

    TYPE_IDENTIFIER  shift, and go to state 143


State 130

   18 feature: VAR OBJECT_IDENTIFIER ASSIGN NATIVE SEMICOLON .

    $default  reduce using rule 18 (feature)


State 131

   19 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN . expression SEMICOLON

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 144


State 132

   38 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES . expression ELSE expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 145


State 133

   40 expression: SUPER DOT OBJECT_IDENTIFIER actuals .

    $default  reduce using rule 40 (expression)


State 134

   33 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 146


State 135

   39 expression: WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 147


State 136

   65 casecontent: CASE . OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW block
   66            | CASE . NUL DARROW block

    NUL                shift, and go to state 148
    OBJECT_IDENTIFIER  shift, and go to state 149


State 137

   62 cases: OPEN_ACCOLADE casecontents . CLOSE_ACCOLADE
   63 casecontents: casecontents . casecontent

    CASE            shift, and go to state 136
    CLOSE_ACCOLADE  shift, and go to state 150

    casecontent  go to state 151


State 138

   64 casecontents: casecontent .

    $default  reduce using rule 64 (casecontents)


State 139

   46 expression: expression DOT OBJECT_IDENTIFIER actuals .

    $default  reduce using rule 46 (expression)


State 140

   25 formalcontent: OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER .

    $default  reduce using rule 25 (formalcontent)


State 141

   23 formalcontents: formalcontents COMMA formalcontent .

    $default  reduce using rule 23 (formalcontents)


State 142

   16 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . expression SEMICOLON
   17        | DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . NATIVE SEMICOLON

    IF                 shift, and go to state 35
    NATIVE             shift, and go to state 152
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 153


State 143

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN expression SEMICOLON
   15        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER . ASSIGN NATIVE SEMICOLON

    ASSIGN  shift, and go to state 154


State 144

   19 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression . SEMICOLON
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP      shift, and go to state 82
    SEMICOLON  shift, and go to state 155
    MATCH      shift, and go to state 83
    LE         shift, and go to state 84
    LT         shift, and go to state 85
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MULTIPLY   shift, and go to state 88
    DIVIDE     shift, and go to state 89
    DOT        shift, and go to state 90


State 145

   38 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression . ELSE expression
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    ELSE      shift, and go to state 156
    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90


State 146

   33 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 157


State 147

   39 expression: WHILE OPEN_PARENTHESES expression CLOSE_PARENTHESES expression .
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 39 (expression)


State 148

   66 casecontent: CASE NUL . DARROW block

    DARROW  shift, and go to state 158


State 149

   65 casecontent: CASE OBJECT_IDENTIFIER . COLON TYPE_IDENTIFIER DARROW block

    COLON  shift, and go to state 159


State 150

   62 cases: OPEN_ACCOLADE casecontents CLOSE_ACCOLADE .

    $default  reduce using rule 62 (cases)


State 151

   63 casecontents: casecontents casecontent .

    $default  reduce using rule 63 (casecontents)


State 152

   17 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE . SEMICOLON

    SEMICOLON  shift, and go to state 160


State 153

   16 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression . SEMICOLON
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP      shift, and go to state 82
    SEMICOLON  shift, and go to state 161
    MATCH      shift, and go to state 83
    LE         shift, and go to state 84
    LT         shift, and go to state 85
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MULTIPLY   shift, and go to state 88
    DIVIDE     shift, and go to state 89
    DOT        shift, and go to state 90


State 154

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . expression SEMICOLON
   15        | OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN . NATIVE SEMICOLON

    IF                 shift, and go to state 35
    NATIVE             shift, and go to state 162
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 163


State 155

   19 feature: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 19 (feature)


State 156

   38 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE . expression

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    expression  go to state 164


State 157

   33 blockexpression: VAR OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER ASSIGN expression .
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 33 (blockexpression)


State 158

   66 casecontent: CASE NUL DARROW . block

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    VAR                shift, and go to state 40
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    block             go to state 165
    blockexpressions  go to state 52
    blockexpression   go to state 53
    expression        go to state 54


State 159

   65 casecontent: CASE OBJECT_IDENTIFIER COLON . TYPE_IDENTIFIER DARROW block

    TYPE_IDENTIFIER  shift, and go to state 166


State 160

   17 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON .

    $default  reduce using rule 17 (feature)


State 161

   16 feature: DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 16 (feature)


State 162

   15 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE . SEMICOLON

    SEMICOLON  shift, and go to state 167


State 163

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression . SEMICOLON
   46 expression: expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP      shift, and go to state 82
    SEMICOLON  shift, and go to state 168
    MATCH      shift, and go to state 83
    LE         shift, and go to state 84
    LT         shift, and go to state 85
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87
    MULTIPLY   shift, and go to state 88
    DIVIDE     shift, and go to state 89
    DOT        shift, and go to state 90


State 164

   38 expression: IF OPEN_PARENTHESES expression CLOSE_PARENTHESES expression ELSE expression .
   46           | expression . DOT OBJECT_IDENTIFIER actuals
   47           | expression . MATCH cases
   48           | expression . LE expression
   49           | expression . LT expression
   50           | expression . EQ_OP expression
   51           | expression . MULTIPLY expression
   52           | expression . DIVIDE expression
   53           | expression . PLUS expression
   54           | expression . MINUS expression

    EQ_OP     shift, and go to state 82
    MATCH     shift, and go to state 83
    LE        shift, and go to state 84
    LT        shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    MULTIPLY  shift, and go to state 88
    DIVIDE    shift, and go to state 89
    DOT       shift, and go to state 90

    $default  reduce using rule 38 (expression)


State 165

   66 casecontent: CASE NUL DARROW block .

    $default  reduce using rule 66 (casecontent)


State 166

   65 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER . DARROW block

    DARROW  shift, and go to state 169


State 167

   15 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN NATIVE SEMICOLON .

    $default  reduce using rule 15 (feature)


State 168

   14 feature: OVERRIDE DEF OBJECT_IDENTIFIER formals COLON TYPE_IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 14 (feature)


State 169

   65 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW . block

    IF                 shift, and go to state 35
    NEW                shift, and go to state 36
    NUL                shift, and go to state 37
    SUPER              shift, and go to state 38
    THIS               shift, and go to state 39
    VAR                shift, and go to state 40
    WHILE              shift, and go to state 41
    OPEN_ACCOLADE      shift, and go to state 42
    OPEN_PARENTHESES   shift, and go to state 43
    OPEN_BRACKETS      shift, and go to state 44
    MINUS              shift, and go to state 45
    NOT                shift, and go to state 46
    BOOLEAN_CONST      shift, and go to state 47
    INTEGER_CONST      shift, and go to state 48
    STRING_LITERAL     shift, and go to state 49
    OBJECT_IDENTIFIER  shift, and go to state 50

    block             go to state 170
    blockexpressions  go to state 52
    blockexpression   go to state 53
    expression        go to state 54


State 170

   65 casecontent: CASE OBJECT_IDENTIFIER COLON TYPE_IDENTIFIER DARROW block .

    $default  reduce using rule 65 (casecontent)
